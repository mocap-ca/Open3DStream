name: linux
on:
  push:
    tags:
      - 'v*'  # Trigger the workflow on tags starting with 'v'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Specify the tag for manual run'
        required: false
        
jobs:

  build:
    name: build
    runs-on: [ ubuntu-latest ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

      # Ensure submodules are fetched
      with:
        submodules: 'recursive'

    - name: Get Tools
      run: sudo apt-get install -y cmake ninja-build libmbedtls-dev        

    - name: NNG
      working-directory: thirdparty/nng
      run: |
        mkdir -p $RUNNER_TEMP/usr
        cmake -B build -G Ninja -DNNG_ENABLE_TLS=ON -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/usr
        cmake --build build
        cmake --install build

    - name: CML
      working-directory: thirdparty/cml
      run: |
        cmake -B build -G Ninja -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/usr
        cmake --build build
        cmake --install build        

    - name: CRC
      working-directory: thirdparty/crccpp
      run: |
        cmake -B build -G Ninja -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/usr
        cmake --build build
        cmake --install build

    - name: FlatBuffers
      working-directory: thirdparty/flatbuffers
      run: |
        cmake -B build -G Ninja -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/usr
        cmake --build build
        cmake --install build        

    - name: Open3DStream
      run: |
        cmake -B build -G Ninja -D NNG_ENABLE_TLS=ON -DCMAKE_PREFIX_PATH=$RUNNER_TEMP/usr -DCMAKE_INSTALL_PREFIX=$RUNNER_TEMP/out
        cmake --build build
        cmake --install build

    - name: Package Release
      run: |
        cd $RUNNER_TEMP && tar -czvf o3ds.tgz -C out .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag || github.ref }}
        release_name: Release ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false       

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: $RUNNER_TEMP/o3ds.tgz
        asset_name: o3ds.tar.gz
        asset_content_type: application/gzip        
