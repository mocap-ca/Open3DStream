name: O3DS windows
on:
  push:
    tags:
      - 'v*'  # Trigger the workflow on tags starting with 'v'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Specify the tag for manual run'
        required: false

jobs:
  build:
    runs-on: windows-latest

    steps:
      - id: get_version
        uses: dhkatz/get-version-action@v3.0.0

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: mkdir usr
        run: mkdir -p usr

      - name: Perl
        uses: shogo82148/actions-setup-perl@v1.27.0
        with:
          perl-version: '5.32'

      - name: Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
      - run: pip install jsonschema jinja2         

      - name: CMake
        run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
            
      - name: mbedtls
        working-directory: thirdparty/mbedtls
        run: |
          mkdir build
          cmake -S . -B build -DGEN_FILES=ON -DENABLE_TESTING=Off -DCMAKE_INSTALL_PREFIX=$env:RUNNER_TEMP/usr
          cmake --build build --config Release
          cmake --install build

      - name: NNG
        working-directory: thirdparty/nng
        run: |
          cmake -B build -DNNG_ENABLE_TLS=ON -DCMAKE_INSTALL_PREFIX=%RUNNER_TEMP%/usr -DCMAKE_PREFIX_PATH=$env:RUNNER_TEMP/usr
          cmake --build build
          cmake --install build

      - name: CML
        working-directory: thirdparty/cml
        run: |
          cmake -B build -DCMAKE_INSTALL_PREFIX=$env:RUNNER_TEMP/usr
          cmake --build build
          cmake --install build        

      - name: CRC
        working-directory: thirdparty/crccpp
        run: |
          cmake -B build -DCMAKE_INSTALL_PREFIX=$env:RUNNER_TEMP/usr
          cmake --build build
          cmake --install build

      - name: FlatBuffers
        working-directory: thirdparty/flatbuffers
        run: |
          cmake -B build -DCMAKE_INSTALL_PREFIX=$env:RUNNER_TEMP/usr
          cmake --build build
          cmake --install build              

      - name: Open3DStream
        run: |
          cmake -B build -DVERSION_TAG=\"${{ steps.get_version.outputs.version-without-v }}\" -DNNG_ENABLE_TLS=ON -DCMAKE_PREFIX_PATH$env:RUNNER_TEMP/usr -DCMAKE_INSTALL_PREFIX=out
          cmake --build build
          cmake --install build        
